# Python stubs generated by omniidl from idl/test.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "RTR"
#
__name__ = "RTR"
_0_RTR = omniORB.openModule("RTR", r"idl/test.idl")
_0_RTR__POA = omniORB.openModule("RTR__POA", r"idl/test.idl")


# interface Test1
_0_RTR._d_Test1 = (omniORB.tcInternal.tv_objref, "IDL:RTR/Test1:1.0", "Test1")
omniORB.typeMapping["IDL:RTR/Test1:1.0"] = _0_RTR._d_Test1
_0_RTR.Test1 = omniORB.newEmptyClass()
class Test1 :
    _NP_RepositoryId = _0_RTR._d_Test1[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RTR.Test1 = Test1
_0_RTR._tc_Test1 = omniORB.tcInternal.createTypeCode(_0_RTR._d_Test1)
omniORB.registerType(Test1._NP_RepositoryId, _0_RTR._d_Test1, _0_RTR._tc_Test1)

# Test1 operations and attributes
Test1._d_hoge = ((omniORB.tcInternal.tv_double, ), (omniORB.tcInternal.tv_double, ), None)

# Test1 object reference
class _objref_Test1 (CORBA.Object):
    _NP_RepositoryId = Test1._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def hoge(self, *args):
        return _omnipy.invoke(self, "hoge", _0_RTR.Test1._d_hoge, args)

    __methods__ = ["hoge"] + CORBA.Object.__methods__

omniORB.registerObjref(Test1._NP_RepositoryId, _objref_Test1)
_0_RTR._objref_Test1 = _objref_Test1
del Test1, _objref_Test1

# Test1 skeleton
__name__ = "RTR__POA"
class Test1 (PortableServer.Servant):
    _NP_RepositoryId = _0_RTR.Test1._NP_RepositoryId


    _omni_op_d = {"hoge": _0_RTR.Test1._d_hoge}

Test1._omni_skeleton = Test1
_0_RTR__POA.Test1 = Test1
omniORB.registerSkeleton(Test1._NP_RepositoryId, Test1)
del Test1
__name__ = "RTR"

# interface Test2
_0_RTR._d_Test2 = (omniORB.tcInternal.tv_objref, "IDL:RTR/Test2:1.0", "Test2")
omniORB.typeMapping["IDL:RTR/Test2:1.0"] = _0_RTR._d_Test2
_0_RTR.Test2 = omniORB.newEmptyClass()
class Test2 :
    _NP_RepositoryId = _0_RTR._d_Test2[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RTR.Test2 = Test2
_0_RTR._tc_Test2 = omniORB.tcInternal.createTypeCode(_0_RTR._d_Test2)
omniORB.registerType(Test2._NP_RepositoryId, _0_RTR._d_Test2, _0_RTR._tc_Test2)

# Test2 operations and attributes
Test2._d_fuga = ((), (), None)

# Test2 object reference
class _objref_Test2 (CORBA.Object):
    _NP_RepositoryId = Test2._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def fuga(self, *args):
        return _omnipy.invoke(self, "fuga", _0_RTR.Test2._d_fuga, args)

    __methods__ = ["fuga"] + CORBA.Object.__methods__

omniORB.registerObjref(Test2._NP_RepositoryId, _objref_Test2)
_0_RTR._objref_Test2 = _objref_Test2
del Test2, _objref_Test2

# Test2 skeleton
__name__ = "RTR__POA"
class Test2 (PortableServer.Servant):
    _NP_RepositoryId = _0_RTR.Test2._NP_RepositoryId


    _omni_op_d = {"fuga": _0_RTR.Test2._d_fuga}

Test2._omni_skeleton = Test2
_0_RTR__POA.Test2 = Test2
omniORB.registerSkeleton(Test2._NP_RepositoryId, Test2)
del Test2
__name__ = "RTR"

#
# End of module "RTR"
#
__name__ = "test_idl"

_exported_modules = ( "RTR", )

# The end.
